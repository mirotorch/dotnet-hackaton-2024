// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using quadrolingoAPI.Models;

#nullable disable

namespace quadrolingoAPI.Migrations
{
    [DbContext(typeof(APIContext))]
    partial class APIContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("quadrolingoAPI.Models.Exercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("TIMESTAMP")
                        .HasColumnType("datetime2");

                    b.Property<int>("USER_IDId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("USER_IDId");

                    b.ToTable("Exercises", (string)null);
                });

            modelBuilder.Entity("quadrolingoAPI.Models.Language", b =>
                {
                    b.Property<string>("LANG_CODE")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LANG_ENG_NAME")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LANG_CODE");

                    b.ToTable("Languages", (string)null);
                });

            modelBuilder.Entity("quadrolingoAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BASE_LANGLANG_CODE")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("CHAT_ID")
                        .HasColumnType("bigint");

                    b.Property<string>("FIRST_NAME")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LAST_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("STUDY_LANGLANG_CODE")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("TELEGRAM_ID")
                        .HasColumnType("bigint");

                    b.Property<string>("USERNAME")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BASE_LANGLANG_CODE");

                    b.HasIndex("STUDY_LANGLANG_CODE");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("quadrolingoAPI.Models.UserWord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("TIMESTAMP")
                        .HasColumnType("datetime2");

                    b.Property<int>("USER_IDId")
                        .HasColumnType("int");

                    b.Property<int>("WORD_IDId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("USER_IDId");

                    b.HasIndex("WORD_IDId");

                    b.ToTable("UserWords", (string)null);
                });

            modelBuilder.Entity("quadrolingoAPI.Models.Word", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("WORD_BASE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WORD_LANG")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WORD_TRANSLATION")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Words", (string)null);
                });

            modelBuilder.Entity("quadrolingoAPI.Models.WordExercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EXERCISE_IDId")
                        .HasColumnType("int");

                    b.Property<bool>("Guessed")
                        .HasColumnType("bit");

                    b.Property<int>("WORD_IDId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EXERCISE_IDId");

                    b.HasIndex("WORD_IDId");

                    b.ToTable("WordExercises", (string)null);
                });

            modelBuilder.Entity("quadrolingoAPI.Models.Exercise", b =>
                {
                    b.HasOne("quadrolingoAPI.Models.User", "USER_ID")
                        .WithMany()
                        .HasForeignKey("USER_IDId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("USER_ID");
                });

            modelBuilder.Entity("quadrolingoAPI.Models.User", b =>
                {
                    b.HasOne("quadrolingoAPI.Models.Language", "BASE_LANG")
                        .WithMany()
                        .HasForeignKey("BASE_LANGLANG_CODE");

                    b.HasOne("quadrolingoAPI.Models.Language", "STUDY_LANG")
                        .WithMany()
                        .HasForeignKey("STUDY_LANGLANG_CODE");

                    b.Navigation("BASE_LANG");

                    b.Navigation("STUDY_LANG");
                });

            modelBuilder.Entity("quadrolingoAPI.Models.UserWord", b =>
                {
                    b.HasOne("quadrolingoAPI.Models.User", "USER_ID")
                        .WithMany()
                        .HasForeignKey("USER_IDId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("quadrolingoAPI.Models.Word", "WORD_ID")
                        .WithMany()
                        .HasForeignKey("WORD_IDId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("USER_ID");

                    b.Navigation("WORD_ID");
                });

            modelBuilder.Entity("quadrolingoAPI.Models.WordExercise", b =>
                {
                    b.HasOne("quadrolingoAPI.Models.Exercise", "EXERCISE_ID")
                        .WithMany()
                        .HasForeignKey("EXERCISE_IDId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("quadrolingoAPI.Models.Word", "WORD_ID")
                        .WithMany()
                        .HasForeignKey("WORD_IDId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EXERCISE_ID");

                    b.Navigation("WORD_ID");
                });
#pragma warning restore 612, 618
        }
    }
}
